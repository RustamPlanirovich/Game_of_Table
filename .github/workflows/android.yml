name: Test_and_build_signed_artifacts_on_release

on:
  push:
    branches:
      - 'master'

env:
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  RELEASE_SIGN_KEY_ALIAS: ${{ secrets.RELEASE_SIGN_KEY_ALIAS }}
  RELEASE_SIGN_KEY_PASSWORD: ${{ secrets.RELEASE_SIGN_KEY_PASSWORD }}

jobs:
  build_apk_aab:
    name: Build release artifacts
    runs-on: ubuntu-20.04
    steps:

      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with: {java-version: 1.8}

      - name: Checkout keystore repo
        uses: actions/checkout@v2
        with:
          repository: ${{ secrets.KEYSTORE_GIT_REPOSITORY }}
          token: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}
          path: app/keystore

      - name: Run tests and build release artifacts
        run: |
          ./gradlew test
          bash ./gradlew assembleRelease --stacktrace
          ./gradlew bundleRelease

      - name: Upload signed APK
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk

      - name: Upload AAB Bundle
        uses: actions/upload-artifact@v2
        with:
          name: app-release.aab
          path: app/build/outputs/bundle/release/app-release.aab

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Two
          release_name: Two
          draft: false
          prerelease: false

      - name: Get Version Name
        uses: actions/github-script@v3
        id: get-version
        with:
          script: |
            const str=process.env.GITHUB_REF;
            return str.substring(str.indexOf("v"));
          result-encoding: string

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # Upload URL, no need to change
          asset_path: app/build/outputs/apk/release/app-release.apk # Upload path
          asset_name: LightTimetable-${{steps.get-version.outputs.result}}.apk #
          asset_content_type: application/vnd.android.package-archiv

#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a upload_url. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: app/build/outputs/apk/release/app-release.apk
#          asset_name: Game Of Table.apk
#          asset_content_type: application/zip
